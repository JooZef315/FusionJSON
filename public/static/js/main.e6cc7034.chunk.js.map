{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/DishdetailComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","src","image","alt","name","CardBody","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","Header","toggleNav","bind","toggleModal","handleLogin","state","isNavOpen","isModalOpen","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Component","Footer","required","val","length","maxLength","len","CommentForm","handleSubmit","values","postComment","dishId","rating","author","comment","Row","md","Col","select","model","placeholder","text","validators","minLength","show","messages","textarea","rows","size","RenderComments","comments","in","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","transformProps","exitTransform","top","CardText","description","DishDetail","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","contactType","message","resetFeedbackForm","role","checkbox","offset","RenderLeader","Media","left","middle","object","About","leaders","CardHeader","title","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","Feedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","agree","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6cc7034.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\r\n","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport { Card, CardBody, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n    function RenderMenuItem({dish}) {\r\n        return (\r\n            <Card >\r\n              <Link to={`/menu/${dish.id}`} >\r\n                  <CardImg width=\"100%\"\r\n                    src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle className=\"dish\">{dish.name}</CardTitle>\r\n                  </CardBody>\r\n              </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n          return (\r\n            <div className=\"container body\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n\r\nexport default Menu;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n//     CardTitle } from 'reactstrap';\r\n//\r\n//\r\n// class Menu extends Component {\r\n//   constructor(props) {\r\n//       super(props);\r\n//\r\n//   }\r\n//\r\n//     render() {\r\n//         const menu = this.props.dishes.map((dish) => {\r\n//             return (\r\n//               <div  className=\"col-12 col-md-5 m-md-1\">\r\n//                 <Card key={dish.id} onClick={() => this.props.onClick(dish.id)}>\r\n//                       <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n//                   <CardImgOverlay>\r\n//                     <CardTitle>{dish.name}</CardTitle>\r\n//                   </CardImgOverlay>\r\n//                 </Card>\r\n//               </div>\r\n//             );\r\n//         });\r\n//\r\n//         return (\r\n//           <div className=\"container\">\r\n//               <div className=\"row\">\r\n//                   {menu}\r\n//               </div>\r\n//           </div>\r\n//         );\r\n//     }\r\n// }\r\n//\r\n// export default Menu;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    };\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({isNavOpen: !this.state.isNavOpen});\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({isModalOpen: !this.state.isModalOpen});\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link text-warning\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link text-warning\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link text-warning\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link text-warning\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button className=\"text-warning\" outline onClick={this.toggleModal}><span className=\" fa fa-sign-in fa-lg\"></span> Login\r\n                  </Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>Ristorante con Fusion</h1>\r\n                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal} >Login</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n               <FormGroup>\r\n                   <Label htmlFor=\"username\">Username</Label>\r\n                   <Input type=\"text\" id=\"username\" name=\"username\"\r\n                       innerRef={(input) => this.username = input} />\r\n               </FormGroup>\r\n               <FormGroup>\r\n                   <Label htmlFor=\"password\">Password</Label>\r\n                   <Input type=\"password\" id=\"password\" name=\"password\"\r\n                       innerRef={(input) => this.password = input}  />\r\n               </FormGroup>\r\n               <FormGroup check>\r\n                   <Label check>\r\n                       <Input type=\"checkbox\" name=\"remember\"\r\n                       innerRef={(input) => this.remember = input}  />\r\n                       Remember me\r\n                   </Label>\r\n               </FormGroup>\r\n               <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n             </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                    <li><Link to='/aboutus'>About Us</Link></li>\r\n                    <li><Link to='/menu'>Menu</Link></li>\r\n                    <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport {Modal, ModalHeader, ModalBody, Button, Label, Col, Row, Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\n  class CommentForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.toggleModal = this.toggleModal.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.state = {\r\n        isModalOpen: false\r\n      };\r\n    }\r\n\r\n    toggleModal() {\r\n      this.setState({isModalOpen: !this.state.isModalOpen});\r\n    }\r\n\r\n    handleSubmit(values) {\r\n      this.toggleModal();\r\n      this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n      return(\r\n      <div>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal} >Rate us!</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" md={4}>rating</Label>\r\n                <Col md={12}>\r\n                  <Control.select model=\".rating\" id=\"rating\" placeholder=\"your rating\" className=\"form-control\">\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\" md={4}>First Name</Label>\r\n                <Col md={12}>\r\n                  <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                    placeholder=\"author\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required, minLength: minLength(3), maxLength: maxLength(15)}}/>\r\n                  <Errors className=\"text-danger\" model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{ required: 'Required',\r\n                      minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less'}}/>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"comment\" md={6}>Your Feedback</Label>\r\n                <Col md={12}>\r\n                  <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                    rows=\"6\" className=\"form-control\" />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{size:10}}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    submit\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Button outline className=\"text-primary\" onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span>submit comment</Button>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  function RenderComments({comments, postComment, dishId}){\r\n    if(comments != null)\r\n    return(\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <Card>\r\n          <h4 className=\"text-secondary\">comments</h4>\r\n          <ul >\r\n            <Stagger in>\r\n              {comments.map((comment) => {\r\n                return (\r\n                  <Fade in>\r\n                    <li>\r\n                      <p>\r\n                        {comment.comment}\r\n                      </p>\r\n                      <p>\r\n                        {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                      </p>\r\n                    </li>\r\n                  </Fade>\r\n                );\r\n              })}\r\n            </Stagger>\r\n          </ul>\r\n        </Card>\r\n        <div>\r\n          <CommentForm dishId={dishId} postComment={postComment}/>\r\n       </div>\r\n      </div>\r\n    );\r\n    else {\r\n      return (<div></div>);\r\n    }\r\n  }\r\n\r\n  function RenderDish({dish}){\r\n      return(\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n          <FadeTransform in  transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n            <Card>\r\n              <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n              <CardBody>\r\n                <CardTitle className=\"dish\">\r\n                  {dish.name}\r\n                </CardTitle>\r\n                <CardText>\r\n                  {dish.description}\r\n                </CardText>\r\n              </CardBody>\r\n            </Card>\r\n          </FadeTransform>\r\n        </div>\r\n      );\r\n  }\r\n\r\n    const DishDetail= (props) => {\r\n      if (props.isLoading) {\r\n          return(\r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                      <Loading />\r\n                  </div>\r\n              </div>\r\n          );\r\n      }\r\n      else if (props.errMess) {\r\n          return(\r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                      <h4>{props.errMess}</h4>\r\n                  </div>\r\n              </div>\r\n          );\r\n      }\r\n      else if (props.dish != null) {\r\n        return (\r\n          <div className=\"container body\">\r\n            <div className=\"row\">\r\n              <Breadcrumb>\r\n                <BreadcrumbItem>\r\n                  <Link to=\"/menu\">Menu</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>\r\n                  {props.dish.name}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n              <div className=\"col-12\">\r\n                <h3>\r\n                  {props.dish.name}\r\n                </h3>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <RenderDish dish={props.dish} />\r\n              <RenderComments comments={props.comments}\r\n                postComment={props.postComment}\r\n                dishId={props.dish.id} />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else {\r\n        return (<div></div>);\r\n      }\r\n    }\r\n  export default DishDetail;\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n\r\n  if (isLoading) {\r\n      return(\r\n              <Loading />\r\n      );\r\n  }\r\n  else if (errMess) {\r\n      return(\r\n              <h4>{errMess}</h4>\r\n      );\r\n  }\r\n  else{\r\n    return(\r\n      <FadeTransform  in  transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n        <Card>\r\n            <CardImg src={baseUrl + item.image} alt={item.name} />\r\n            <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n            <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container body\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                      isLoading={props.dishesLoading} errMess={props.dishesErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leaderLoading} errMess={props.leaderErrMess}  />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n  Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n  class Contact extends Component {\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.contactType, values.message);\r\n        // console.log('Current State is: ' + JSON.stringify(values));\r\n        // alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n      return(\r\n        <div className=\"container body\">\r\n\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n              <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n              <h3>Contact Us</h3>\r\n              <hr />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row row-content\">\r\n            <div className=\"col-12\">\r\n              <h3>Location Information</h3>\r\n            </div>\r\n            <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n              <h5>Our Address</h5>\r\n              <address>\r\n                121, Clear Water Bay Road<br />\r\n                Clear Water Bay, Kowloon<br />\r\n                HONG KONG<br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n              <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n              </div>\r\n              <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                <h5>Map of our Location</h5>\r\n              </div>\r\n              <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                <div className=\"btn-group\" role=\"group\">\r\n                  <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                  <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                  <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                </div>\r\n              </div>\r\n          </div>\r\n\r\n    <div className=\"row row-content\">\r\n      <div className=\"col-12\">\r\n        <h3>Send us your Feedback</h3>\r\n      </div>\r\n      <div className=\"col-12 col-md-9\">\r\n        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n            <Col md={10}>\r\n              <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                placeholder=\"First Name\"\r\n                className=\"form-control\"\r\n                validators={{\r\n                  required, minLength: minLength(3), maxLength: maxLength(15)\r\n                }}\r\n                />\r\n              <Errors className=\"text-danger\" model=\".firstname\"\r\n                show=\"touched\"\r\n                messages={{ required: 'Required',\r\n                  minLength: 'Must be greater than 2 characters',\r\n                  maxLength: 'Must be 15 characters or less'}}/>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n            <Col md={10}>\r\n              <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                placeholder=\"Last Name\"\r\n                className=\"form-control\"\r\n                validators={{required, minLength: minLength(3), maxLength: maxLength(15)}}/>\r\n              <Errors className=\"text-danger\"  model=\".lastname\"\r\n                show=\"touched\"messages={{required: 'Required',\r\n                  minLength: 'Must be greater than 2 characters',\r\n                  maxLength: 'Must be 15 characters or less'}}/>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n            <Col md={10}>\r\n              <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                placeholder=\"Tel. Number\"\r\n                className=\"form-control\"\r\n                validators={{required, minLength: minLength(3), maxLength: maxLength(15), isNumber}}/>\r\n              <Errors  className=\"text-danger\"  model=\".telnum\"\r\n                show=\"touched\"\r\n                messages={{  required: 'Required',\r\n                  minLength: 'Must be greater than 2 numbers',\r\n                  maxLength: 'Must be 15 numbers or less',\r\n                  isNumber: 'Must be a number'}}  />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n            <Col md={10}>\r\n              <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"form-control\"\r\n                validators={{required, validEmail}}/>\r\n              <Errors  className=\"text-danger\"  model=\".email\"  show=\"touched\"  messages={{  required: 'Required',\r\n                  validEmail: 'Invalid Email Address' }} />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Col  md={2}>\r\n              <Label htmlFor=\"contactType\">\r\n                contact Type\r\n              </Label>\r\n            </Col>\r\n            <Col  md={8}>\r\n              <strong>May we contact you?  </strong>\r\n              <Control.checkbox model=\".agree\"\r\n                name=\"agree\" id=\"agree\" />\r\n            </Col>\r\n            <Col md={2}>\r\n              <Control.select model=\".contactType\" id=\"contactType\" placeholder=\"contact Type\" className=\"form-control\">\r\n                <option>E-mail</option>\r\n                <option>TEL.</option>\r\n              </Control.select>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n            <Col md={10}>\r\n              <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                rows=\"12\"\r\n                className=\"form-control\" />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Col md={{size:10, offset: 2}}>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Send Feedback\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n}\r\n\r\nexport default Contact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n// this.state = {\r\n//   firstname: '',\r\n//   lastname: '',\r\n//   telnum: '',\r\n//   email: '',\r\n//   agree: false,\r\n//   contactType: 'Tel.',\r\n//   message: '',\r\n//   touched:{\r\n//     firstname: false,\r\n//     telnum: false,\r\n//     lastname: false\r\n//   }\r\n// };\r\n//\r\n// this.handleInputChange = this.handleInputChange.bind(this);\r\n// this.handleSubmit = this.handleSubmit.bind(this);\r\n// this.handleBlur = this.handleBlur.bind(this);\r\n\r\n// handleInputChange(event) {\r\n//   const target = event.target;\r\n//   const value = target.type === 'checkbox' ? target.checked : target.value;\r\n//   const name = target.name;\r\n//\r\n//   this.setState({\r\n//     [name]: value\r\n//   });\r\n// }\r\n//\r\n// handleSubmit(event) {\r\n//   console.log('Current State is: ' + JSON.stringify(this.state));\r\n//   alert('Current State is: ' + JSON.stringify(this.state));\r\n//   event.preventDefault();\r\n// }\r\n//\r\n// handleBlur = (field) => (evt) => {\r\n//   this.setState({\r\n//     touched: {...this.state.touched, [field]: true}\r\n//   });\r\n// }\r\n//\r\n// validate(firstname,lastname,telnum,email){\r\n//   const errors = {\r\n//     firstname: '',\r\n//     lastname: '',\r\n//     telnum: '',\r\n//     email: ''\r\n//\r\n//   };\r\n//   if (this.state.touched.firstname && firstname.length < 3) {\r\n//     errors.firstname = 'there is an error - too short';\r\n//   }\r\n//   if (this.state.touched.lastname && lastname.length < 3) {\r\n//     errors.lastname = 'there is an error - too short';\r\n//   }\r\n//   const reg = /^\\d+$/;\r\n//   if (this.state.touched.telnum && !reg.test(telnum)) {\r\n//     errors.telnum = 'Numbers only';\r\n//   }\r\n//   if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1) {\r\n//     errors.email = 'that is not Email';\r\n//   }\r\n//   return errors;\r\n// }\r\n\r\n// <Form onSubmit={this.handleSubmit}>\r\n//   <FormGroup row>\r\n//     <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n//     <Col md={10}>\r\n//       <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n//         placeholder=\"First Name\"\r\n//         value={this.state.firstname}\r\n//         valid={errors.firstname === ''}\r\n//         invalid={errors.firstname !== ''}\r\n//         onChange={this.handleInputChange}\r\n//         onBlur={this.handleBlur('firstname')} />\r\n//        <FormFeedback>{errors.firstname}</FormFeedback>\r\n//     </Col>\r\n//   </FormGroup>\r\n//   <FormGroup row>\r\n//     <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n//     <Col md={10}>\r\n//       <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n//         placeholder=\"Last Name\"\r\n//         value={this.state.lastname}\r\n//         valid={errors.lastname === ''}\r\n//         invalid={errors.lastname !== ''}\r\n//         onChange={this.handleInputChange}\r\n//         onBlur={this.handleBlur('lastname')} />\r\n//        <FormFeedback>{errors.lastname}</FormFeedback>\r\n//     </Col>\r\n//   </FormGroup>\r\n//   <FormGroup row>\r\n//     <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n//     <Col md={10}>\r\n//       <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n//         placeholder=\"Tel. number\"\r\n//         value={this.state.telnum}\r\n//         valid={errors.telnum === ''}\r\n//         invalid={errors.telnum !== ''}\r\n//         onChange={this.handleInputChange}\r\n//         onBlur={this.handleBlur('telnum')} />\r\n//       <FormFeedback>{errors.telnum}</FormFeedback>\r\n//     </Col>\r\n//   </FormGroup>\r\n//   <FormGroup row>\r\n//     <Label htmlFor=\"email\" md={2}>Email</Label>\r\n//     <Col md={10}>\r\n//       <Input type=\"email\" id=\"email\" name=\"email\"\r\n//         placeholder=\"Email\"\r\n//         value={this.state.email}\r\n//         invalid={errors.email !== ''}\r\n//         valid={errors.email === ''}\r\n//         onBlur={this.handleBlur('email')}\r\n//         onChange={this.handleInputChange} />\r\n//       <FormFeedback>{errors.email}</FormFeedback>\r\n//     </Col>\r\n//   </FormGroup>\r\n//   <FormGroup row>\r\n//     <Col md={{size: 6, offset: 2}}>\r\n//       <FormGroup check>\r\n//         <Label check>\r\n//           <Input type=\"checkbox\"\r\n//             name=\"agree\"\r\n//             checked={this.state.agree}\r\n//             onChange={this.handleInputChange} /> {' '}\r\n//             <strong>May we contact you?</strong>\r\n//           </Label>\r\n//         </FormGroup>\r\n//       </Col>\r\n//       <Col md={{size: 3, offset: 1}}>\r\n//         <Input type=\"select\" name=\"contactType\"\r\n//           value={this.state.contactType}\r\n//           onChange={this.handleInputChange}>\r\n//           <option>Tel.</option>\r\n//           <option>Email</option>\r\n//         </Input>\r\n//       </Col>\r\n//     </FormGroup>\r\n//     <FormGroup row>\r\n//       <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n//       <Col md={10}>\r\n//         <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n//           rows=\"12\"\r\n//           value={this.state.message}\r\n//           onChange={this.handleInputChange}></Input>\r\n//       </Col>\r\n//     </FormGroup>\r\n//     <FormGroup row>\r\n//       <Col md={{size: 10, offset: 2}}>\r\n//         <Button type=\"submit\" color=\"primary\">\r\n//           Send Feedback\r\n//         </Button>\r\n//       </Col>\r\n//     </FormGroup>\r\n//   </Form>\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, CardImg, CardText, CardTitle, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n  return(\r\n    <li>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-sm-3 d-flex\">\r\n          <Media left middle>\r\n            <Media object src={baseUrl +  leader.image} alt={leader.name} />\r\n          </Media>\r\n        </div>\r\n        <div className=\"col-12 col-sm-9\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle >\r\n                <h3 className=\"text-primary\">{leader.name}</h3>\r\n              </CardTitle>\r\n              <CardText>\r\n                <h5 className=\"text-secondary\">{leader.designation}</h5>\r\n                <p>{leader.description}</p>\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction About(props) {\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n              <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n    if (props.leaders.isLoading) {\r\n          return(\r\n            <div className=\"row row-content\">\r\n              <div className=\"col-12\">\r\n                  <div>\r\n                    <Loading />\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n    else if (props.leaders.errMess) {\r\n          return(\r\n            <div className=\"row row-content\">\r\n              <div className=\"col-12\">\r\n                  <div>\r\n                      <h4>{props.dishes.errMess}</h4>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n    else {\r\n      return(\r\n        <div className=\"container body\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <ul className=\"ul\">\r\n                      <Stagger in>\r\n                        <Fade in>\r\n                          {leaders}\r\n                        </Fade>\r\n                      </Stagger>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default About;\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  {console.log('post comments', error.message);\r\n      alert('Your comment could not be posted\\nError:'+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n       else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n      .then(response => {\r\n          if (response.ok) {\r\n            return response;\r\n          } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        error => {\r\n              var errmess = new Error(error.message);\r\n              throw errmess;\r\n        })\r\n      .then(response => response.json())\r\n      .then(comments => dispatch(addComments(comments)))\r\n      .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n      .then(response => {\r\n          if (response.ok) {\r\n            return response;\r\n          } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        error => {\r\n              var errmess = new Error(error.message);\r\n              throw errmess;\r\n        })\r\n      .then(response => response.json())\r\n      .then(promos => dispatch(addPromos(promos)))\r\n      .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n      .then(response => {\r\n          if (response.ok) {\r\n            return response;\r\n          } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        error => {\r\n              var errmess = new Error(error.message);\r\n              throw errmess;\r\n        })\r\n      .then(response => response.json())\r\n      .then(leaders => dispatch(addLeaders(leaders)))\r\n      .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, contactType, message) => (dispatch) => {\r\n    const Feedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    Feedback.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(Feedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => {alert('Current State is: ' + JSON.stringify(response));})\r\n    .catch(error =>  {console.log('post comments', error.message);\r\n      alert('Your comment could not be posted\\nError:'+error.message); });\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { actions } from 'react-redux-form';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (firstname, lastname, telnum, email, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, contactType, message))\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n\r\n  }\r\n\r\n  render(){\r\n    const HomePage = () => {\r\n     return(\r\n       <Home\r\n           dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n           dishesLoading={this.props.dishes.isLoading}\r\n           dishErrMess={this.props.dishes.errMess}\r\n           promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n           promoLoading={this.props.promotions.isLoading}\r\n           promoErrMess={this.props.promotions.errMess}\r\n           leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n           leaderLoading={this.props.leaders.isLoading}\r\n           leaderErrMess={this.props.leaders.errMess} />\r\n\r\n       );\r\n     }\r\n\r\n     const DishWithId = ({match}) => {\r\n        return(\r\n          <DishDetail               dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n          />\r\n        );\r\n      };\r\n\r\n    return (\r\n      <div>\r\n          <Header />\r\n            <TransitionGroup>\r\n              <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                <Switch >\r\n                    <Route path='/home' component={HomePage} />\r\n                    <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                    <Route path='/menu/:dishId' component={DishWithId} />\r\n                     <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                       postFeedback={this.props.postFeedback} />} />\r\n                    <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders}  />} />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n\r\n          <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import { Navbar, NavbarBrand } from 'reactstrap';\r\n// import Menu from './MenuComponent';\r\n// import {DISHES} from '../shared/dishes';\r\n// import DishDetail from './DishdetailComponent';\r\n//\r\n// class Main extends Component {\r\n//   constructor(props){\r\n//     super(props);\r\n//     this.state={\r\n//       selectedDish: null,\r\n//       dishes: DISHES\r\n//     };\r\n//   }\r\n//   onDishSelect(dishId) {\r\n//        this.setState({ selectedDish: dishId});\r\n//    }\r\n//\r\n//\r\n//   render(){\r\n//   return (\r\n//     <div>\r\n//     <Navbar primary color=\"dark\">\r\n//       <div className=\"container\">\r\n//         <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\r\n//       </div>\r\n//     </Navbar>\r\n//         <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} />\r\n//         <DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} />\r\n//     </div>\r\n//   );\r\n//   }\r\n// }\r\n//\r\n// export default Main;\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null, dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n  errMess: null, promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n  errMess: null, leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};\r\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render(){\n    return (\n        <Provider store={store}>\n          <BrowserRouter>\n            <div className=\"App\">\n              <Main />\n            </div>\n          </BrowserRouter>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n      combineReducers({\r\n          dishes: Dishes,\r\n          comments: Comments,\r\n          promotions: Promotions,\r\n          leaders: Leaders,\r\n          ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n      }),\r\n      applyMiddleware(thunk, logger)\r\n\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// import {createStore} from 'redux';\r\n// import { Reducer, initialState } from './reducer';\r\n//\r\n// export const ConfigureStore = () => {\r\n//     const store = createStore(\r\n//         Reducer, // reducer\r\n//         initialState, // our initialState\r\n//     );\r\n//\r\n//     return store;\r\n// }\r\n\r\n//Reducer\r\n// import { DISHES } from '../shared/dishes';\r\n// import { COMMENTS } from '../shared/comments';\r\n// import { PROMOTIONS } from '../shared/promotions';\r\n// import { LEADERS } from '../shared/leaders';\r\n//\r\n// export const initialState = {\r\n//     dishes: DISHES,\r\n//     comments: COMMENTS,\r\n//     promotions: PROMOTIONS,\r\n//     leaders: LEADERS\r\n// };\r\n//\r\n// export const Reducer = (state = initialState, action) => {\r\n//     return state;\r\n// };\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}